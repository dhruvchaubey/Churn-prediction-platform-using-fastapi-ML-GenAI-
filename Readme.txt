FastAPI Churn Prediction Application
This project is a FastAPI-based application that predicts customer churn using traditional machine learning models and provides natural language explanations for each prediction using the Gemini API.

System Overview
The application exposes several endpoints for a complete ML lifecycle:

/upload: Upload a CSV file and specify the target column for the analysis.

/data_cleaning: Configure and apply preprocessing steps like imputation, scaling, and encoding.

/train_model: Select and train one or more machine learning models on the cleaned data.

/predict: Use a trained model to make predictions on new data and generate a natural language explanation for each prediction.

Setup Instructions
1. Save the files
Save the provided code for main.py and the contents for requirements.txt. Make sure the churn (1).csv file is in the same directory. Note: You'll need to add your Gemini API key to main.py for the prediction endpoint to function.

2. Install Dependencies
Run the following command to install all necessary libraries:

Bash

pip install -r requirements.txt
3. Run the Application
Start the application with Uvicorn:

Bash

uvicorn main:app --reload
The application will be available at http://127.0.0.1:8000. You can access the interactive API documentation at http://127.0.0.1:8000/docs.

GenAI Prompt Structure
The natural language explanations are generated by the Gemini API. The prompt is dynamically created within the /predict endpoint, focusing on key features to provide a concise and human-readable summary. The structure is as follows:

"Analyze the following customer data and provide a concise, natural language explanation for why the customer is likely to {churn or not churn}. Focus on key features like CreditScore, Geography, Age, Tenure, Balance, and EstimatedSalary. The prediction is based on the data: {data_str}"

